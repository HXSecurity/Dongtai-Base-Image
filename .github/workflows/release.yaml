name: Release

on:
  release:
    types: [ created, edited ]
    
jobs:
  Release-DongTai-Infra-Service:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
    steps:
      - name: start-build
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          body: '{"msg_type": "interactive","card": {"config": {"wide_screen_mode": true,"enable_forward": true},"elements": [{"tag": "div","text": {"content": "状态：构建开始\n项目：${{github.repository}}\n分支：${{github.ref}}\n流程：${{github.workflow}}\n构建编号：${{github.run_number}}\n触发事件：${{github.event_name}}\n提交人：${{github.actor}}\nSHA-1：${{github.sha}}\n","tag": "lark_md"}}]}}'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
    

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1


      - name: Login to AliyunRegistry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_DOCKERHUB_USER }}
          password: ${{ secrets.ALIYUN_DOCKERHUB_PASSWORD }}

      - id: release
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          ID=`echo ${TAG_NAME##v}`
          echo "::set-output name=version::$ID"

      - name: Setup ossutil
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: ${{ secrets.DONGTAI_OSS_ENDPOINT }}
          access-key-id: ${{ secrets.DONGTAI_OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.DONGTAI_OSS_ACCESS_KEY_SECRET }}
          
      - name: Push sql to OSS
        run: |
          ossutil cp -rf mysql/ --include "db.sql" --include "update-*.sql" oss://huoqi-public/iast-pro/sql/


      - name: mysql build
        working-directory: ./mysql
        run: |
          docker build -t registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:${{ steps.release.outputs.version }} .

      - name: mysql push
        run: |
          docker tag registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:${{ steps.release.outputs.version }} registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:latest
          docker push registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:${{ steps.release.outputs.version }}
          docker push registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:latest

      - name: Build redis
        uses: docker/build-push-action@v2
        with:
          context: ./redis
          load: true
          tags: | 
            registry.cn-beijing.aliyuncs.com/secnium/dongtai-redis-saas-prod:${{ steps.release.outputs.version }}
            registry.cn-beijing.aliyuncs.com/secnium/dongtai-redis-saas-prod:latest

      - name: Build logstash
        run: |
          docker pull registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logrotate:latest
          docker pull registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logstash:latest
          docker tag registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logrotate:latest registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logrotate:${{ steps.release.outputs.version }} 
          docker tag registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logstash:latest registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logstash:${{ steps.release.outputs.version }}
          docker push registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logrotate:${{ steps.release.outputs.version }}
          docker push registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logstash:${{ steps.release.outputs.version }}
          docker pull registry.cn-beijing.aliyuncs.com/secnium/dongtai-web-saas-prod:${{ steps.release.outputs.version }} 
          docker pull registry.cn-beijing.aliyuncs.com/secnium/dongtai-server-entri:${{ steps.release.outputs.version }}


      - name: Save image to tar file
        run: |
          mkdir iast-${{ steps.release.outputs.version }} && cd iast-${{ steps.release.outputs.version }}
          #docker save registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod-sca:${{ steps.release.outputs.version }} | gzip > mysql-sca-${{ steps.release.outputs.version }}.tar.gz
          #docker save registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod-sca:${{ steps.release.outputs.version }} | gzip > dongtai-mysql-sca-${{ steps.release.outputs.version }}.tar.gz
          docker save registry.cn-beijing.aliyuncs.com/secnium/dongtai-mysql-saas-prod:${{ steps.release.outputs.version }} \
            registry.cn-beijing.aliyuncs.com/secnium/dongtai-redis-saas-prod:${{ steps.release.outputs.version }} \
            registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logstash:${{ steps.release.outputs.version }} \
            registry.cn-beijing.aliyuncs.com/huoxian_pub/dongtai-logrotate:${{ steps.release.outputs.version }} \
            registry.cn-beijing.aliyuncs.com/secnium/dongtai-web-saas-prod:${{ steps.release.outputs.version }} \
            registry.cn-beijing.aliyuncs.com/secnium/dongtai-server-entri:${{ steps.release.outputs.version }} | gzip > dongtai-${{ steps.release.outputs.version }}.tar.gz
          wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.10.tgz && wget https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64 \
          && git clone https://github.com/HXSecurityBusiness/DongTai.git && cp -r DongTai/deploy/iast .  && tar -xvf docker-20.10.10.tgz && rm -rf docker-20.10.10.tgz DongTai && mv docker-compose-linux-x86_64 docker/docker-compose \
          && mv docker bin && mkdir docker && mv dongtai-${{ steps.release.outputs.version }}.tar.gz docker/ && tar -cvf iast-${{ steps.release.outputs.version }}.tar.gz iast-${{ steps.release.outputs.version }}
          ossutil  cp -f ./iast-${{ steps.release.outputs.version }}.tar.gz oss://huoqi-public/iast_buss/${{ steps.release.outputs.version }}/

      - name: finish build
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          body: '{"msg_type": "interactive","card": {"config": {"wide_screen_mode": true,"enable_forward": true},"elements": [{"tag": "div","text": {"content": "状态：构建完成\n项目：${{github.repository}}\n分支：${{github.ref}}\n流程：${{github.workflow}}\n构建编号：${{github.run_number}}\n触发事件：${{github.event_name}}\n提交人：${{github.actor}}\nSHA-1：${{github.sha}}\n","tag": "lark_md"}}]}}'
